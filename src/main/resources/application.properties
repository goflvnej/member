# 가장 먼저 옵션에서 properties utf-8 설정할 것 (주석 깨짐 방지)

# 서버 포트 번호 기본값 80 사용 (URL 생략 가능)
server.port=80

# Spring Data JPA의 DB 초기 설정 (DB 종류, 데이터베이스 이름, DB 계정 이름, DB 비밀번호)
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/bootex
spring.datasource.username=bootuser
spring.datasource.password=bootuser

# Spring Data JPA의 설정 (프로젝트 실행 시 ddl 설정, 쿼리문 콘솔 출력 포맷팅, 쿼리문 콘솔 출력, 쿼리문 색 부여)
# update : 테이블 구조가 변경된 경우 alter, 테이블이 없으면 create 명령어 수행
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.highlight_sql=true

# 프로그램 재시작 없이 새로고침으로 변경 사항 반영
spring.thymeleaf.cache=false

### multipart 파일 관련 업로드 설정
# 파일 업로드 가능 여부 설정
spring.servlet.multipart.enabled=true

# 업로드 파일의 임시 저장 경로
spring.servlet.multipart.location=C:\\upload

# 한번에 업로드 가능한 파일 최대 크기
spring.servlet.multipart.max-request-size=30MB

# 파일 하나당 업로드 가능한 최대 크기
spring.servlet.multipart.max-file-size=10MB

# 컨트롤러에서 필요한 변수의 값 (실제 저장 경로)
org.zerock.upload.path=C:\\upload

### 로그인 시큐리티 설정
# 로그 레벨 순서 TRACE < DEBUG < INFO < WARN < ERROR
# ERROR : 요청을 처리하는 중 오류가 발생한 경우 표시한다.
# WARN  : 처리 가능한 문제, 향후 시스템 에러의 원인이 될 수 있는 경고성 메시지를 나타낸다.
# INFO  : 상태변경과 같은 정보성 로그를 표시한다.
# DEBUG : 프로그램을 디버깅하기 위한 정보를 표시한다.
# TRACE : 추적 레벨은 Debug보다 훨씬 상세한 정보를 나타낸다.
logging.level.org.springframework=info
logging.level.org.zerock=debug
logging.level.org.zerock.security=trace
logging.level.org.springframework.security.web=debug

# 카카오 로그인
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost/login/oauth2/code/kakao
# spring.security.oauth2.client.registration.kakao.client-id= REST API Key
spring.security.oauth2.client.registration.kakao.client-id=8b9455f942367ca8fdac0c4f79615701

# spring.security.oauth2.client.registration.kakao.client-secret=Client Secret Key
spring.security.oauth2.client.registration.kakao.client-secret=vUVhL80BMlyyeDVS7gX1FkSZ8VDy1ord
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email


spring.security.oauth2.client.registration.google.client-id=404566350202-ohodronk08cf2sclcih6s4qf6fhj90d3.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email

spring.profiles.include=oauth